--Create a table worker which has 6 columns worker_id (unique identifier), first name, last name, salary, joining date, department.

CREATE TABLE Worker (
	WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	FIRST_NAME CHAR(25),
	LAST_NAME CHAR(25),
	SALARY INT(15),
	JOINING_DATE DATETIME,
	DEPARTMENT CHAR(25)
);

-- Insert records into the empty Worker table

INSERT INTO Worker 
	(WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES
		(001, 'Monika', 'Arora', 100000, '21-02-20 09.00.00', 'HR'),
		(002, 'Niharika', 'Verma', 80000, '21-06-11 09.00.00', 'Admin'),
		(003, 'Vishal', 'Singhal', 300000, '21-02-20 09.00.00', 'HR'),
		(004, 'Amitabh', 'Singh', 500000, '21-02-20 09.00.00', 'Admin'),
		(005, 'Vivek', 'Bhati', 500000, '21-06-11 09.00.00', 'Admin'),
		(006, 'Vipul', 'Diwan', 200000, '21-06-11 09.00.00', 'Account'),
		(007, 'Satish', 'Kumar', 75000, '21-01-20 09.00.00', 'Account'),
		(008, 'Geetika', 'Chauhan', 90000, '21-04-11 09.00.00', 'Admin');


--Create a table Bonus which has 4 columns WORKER_REF_ID (worker reference- who is getting the bonus), amount, paid date

CREATE TABLE Bonus (
	WORKER_REF_ID INT,
	BONUS_AMOUNT INT(10),
	BONUS_DATE DATETIME,
	FOREIGN KEY (WORKER_REF_ID)
		REFERENCES Worker(WORKER_ID)
        ON DELETE CASCADE
);

-- Insert records into the empty Bonus table

INSERT INTO Bonus 
	(WORKER_REF_ID, BONUS_AMOUNT, BONUS_DATE) VALUES
		(001, 5000, '23-02-20'),
		(002, 3000, '23-06-11'),
		(003, 4000, '23-02-20'),
		(001, 4500, '23-02-20'),
		(002, 3500, '23-06-11');


--Create a table Bonus which has 4 columns WORKER_REF_ID (worker reference- whose job title), job title, start date

CREATE TABLE Title (
	WORKER_REF_ID INT,
	WORKER_TITLE CHAR(25),
	AFFECTED_FROM DATETIME,
	FOREIGN KEY (WORKER_REF_ID)
		REFERENCES Worker(WORKER_ID)
        ON DELETE CASCADE
);

-- Insert records into the empty Title table

INSERT INTO Title 
	(WORKER_REF_ID, WORKER_TITLE, AFFECTED_FROM) VALUES
 (001, 'Manager', '2023-02-20 00:00:00'),
 (002, 'Executive', '2023-06-11 00:00:00'),
 (008, 'Executive', '2023-06-11 00:00:00'),
 (005, 'Manager', '2023-06-11 00:00:00'),
 (004, 'Asst. Manager', '2023-06-11 00:00:00'),
 (007, 'Executive', '2023-06-11 00:00:00'),
 (006, 'Lead', '2023-06-11 00:00:00'),
 (003, 'Lead', '2023-06-11 00:00:00');





[20:29] Semester -I-II Hybrid PG program
Questions
 
1. Write SQL query to fetch FIRST_NAME from the Worker table using alias name WORKER_NAME.

  select FIRST_NAME as WORKER_NAME from Worker;

2. Write SQL query to fetch FIRST_NAME in upper case from the Worker table using alias name WORKER_NAME.

  select upper(FIRST_NAME) as WORKER_NAME from Worker;

3. print the first 3 character of the FIRST_NAME from Worker table.

  select LEFT(FIRST_NAME ,3) from Worker;

  select substring(FIRST_NAME,1,3) from Worker;

4. print the FISRT_NAME from Worker table after replacing 'a' with 'A'.

  select replace(FIRST_NAME,'a','A') from Worker;

5. print the FIRST_NAME and LAST_NAME from WOrker table into single Columns.

  select CONCAT(FIRST_NAME,' ',LAST_NAME) as "FULL NAME" from Worker;

6. print all worker details from worker table order by FIRST_NAME Ascending.

  select * from Worker order by FIRST_NAME asc;

7. print details of the Worker whose SALARY ties between 100000 and 500000.

  select * from Worker where SALARY between 100000 and 500000;

8. print details of the worker who joined in Feb 2021.

  select * from Worker where year(JOINING_DATE) =2021 and month(JOINING_DATE) = 2;

9. count the employees working in the account department.

  select count(*) from Worker where department ="Account";

10. print details of the workers who are also managers.

  select W.FIRST_NAME, T.WORKER_TITLE from Worker W JOIN Title T ON W.WORKER_ID = T.WORKER_REF_ID and T.WORKER_TITLE ="Manager";

11. query to show only odd WORKER_ID from Worker table;

  select * from Worker where MOD( WORKER_ID,2) <>0;

12. top-3 highest salaried woerker from worker table;

  select * from Worker ORDER BY salary DESC LIMIT 3;

13. 3rd highest salaried worker from worker table;

  select * from Worker ORDER BY salary DESC LIMIT 2,1;